# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /registration:
    post:
      summary: endpoint to regiter user to the system
      operationId: userRegistration
      requestBody:
        description: registration request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerRequest"
      responses:
        '200':
          description: success registration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerResponse"
        '400':
          description: failed registration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /login:
    post:
      summary: endpoint to access the system for registered user
      operationId: userLogin
      requestBody:
        description: login request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginRequest"
      responses:
        '200':
          description: success login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/loginResponse"
        '400':
          description: failed login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
  /profile:
    get:
      summary: endpoint to get user profile by id
      operationId: userGetProfile
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: JWT bearer token header
      responses:
        '200':
          description: success get profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getProfileResponse"
        '403':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
    put:
      summary: endpoint to update user profile by id
      operationId: userUpdateProfile
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: JWT bearer token header
      requestBody:
        description: update profile request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateProfileRequest"
      responses:
        '200':
          description: success get profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/updateProfileResponse"
        '403':
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        '409':
          description: conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
components:
  schemas:
    registerRequest:
      type: object
      required:
        - phone_number
        - full_name
        - password
      properties:
        phone_number:
          type: string
          example: +62857111111
        full_name:
          type: string
          example: udin udin
        password:
          type: string
          example: p@ssw0Rd
    registerResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
    loginRequest:
      type: object
      required:
        - phone_number
        - password
      properties:
        phone_number:
          type: string
          example: +62857111111
        password:
          type: string
          example: p@ssw0Rd
    loginResponse:
      type: object
      properties:
        id:
          format: int64
          type: integer
          example: 1
        token:
          type: string
          example: eyxxxxxxx
    getProfileResponse:
      type: object
      properties:
        phone_number:
          type: string
          example: +62857111111
        full_name:
          type: string
          example: udin udin
    updateProfileRequest:
      type: object
      required:
        - phone_number
        - full_name
      properties:
        phone_number:
          type: string
          example: +62857111111
        full_name:
          type: string
          example: udin udin
    updateProfileResponse:
      type: object
      properties:
        message:
          type: string
          example: success
    errorResponse:
      type: object
      properties:
        meta:
          type: object
          properties:
            statusCode:
              type: integer
              example: 403
            status:
              type: string
              example: Forbidden
        message:
          type: string
          example: Not authorized to access the requested resource
